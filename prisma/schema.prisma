datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
}

model Archive {
    id            Int        @id @default(autoincrement())
    name          String
    l1Class       String
    l2Class       String
    type          String?
    tags          String[]
    metadata      Metadata[]
    downloadCount Int
    viewCount     Int
    favCount      Int
    public        Boolean    @default(false)
    uploader      String     @default("nuistshare")
    uploadTime    DateTime   @default(now())
    Comments      Comments[]
    UsersFav      Users?     @relation("UsersFav", fields: [usersFavId], references: [id])
    usersFavId    Int?
    UsersHis      Users?     @relation("UsersHis", fields: [usersHisId], references: [id])
    usersHisId    Int?
}

model Users {
    id            Int           @id @default(autoincrement())
    name          String        @unique
    nickname      String
    password      String
    phone         String?       @unique
    email         String?       @unique
    verified      Boolean       @default(false)
    UserFavourite Archive[]     @relation("UsersFav")
    UserHistory   Archive[]     @relation("UsersHis")
    Comments      Comments[]
    EmailVerify   EmailVerify[]
    avatar        String?
}

model EmailVerify {
    id        Int      @id @default(autoincrement())
    user      Users    @relation(fields: [userId], references: [id])
    userId    Int
    code      String
    createdAt DateTime @default(now())
}

model Metadata {
    id        Int      @id @default(autoincrement())
    driver    String
    target    String
    label     String
    is_dir    Boolean  @default(false)
    Archive   Archive? @relation(fields: [archiveId], references: [id])
    archiveId Int?
    size      Int?
}

model Comments {
    id        Int      @id @default(autoincrement())
    user      Users    @relation(fields: [userId], references: [id])
    userId    Int
    archive   Archive  @relation(fields: [archiveId], references: [id])
    archiveId Int
    content   String
    time      DateTime @default(now())
}
